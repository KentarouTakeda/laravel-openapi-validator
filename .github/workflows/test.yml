name: Test

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php:
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"
        laravel:
          - "^9.0"
          - "^10.0"
          - "^11.0"
          - "^12.0"
        stability:
          - lowest
          - stable
        include:
          - current: 1
            php: "8.3"
            laravel: "^12.0"
            stability: stable
        exclude:
          - laravel: "^11.0"
            php: "8.1"
          - laravel: "^12.0"
            php: "8.1"
          - laravel: "^11.0"
            stability: lowest

    name: PHP:${{ matrix.php }} / Laravel:${{ matrix.laravel }} / ${{ matrix.stability }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP, with composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none

      - name: Install Composer dependencies
        run: composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update --ansi

      - name: Uninstall packages that is not necessary for the current matrix
        if: ${{ !matrix.current }}
        run: composer remove --dev friendsofphp/php-cs-fixer larastan/larastan phpstan/phpstan phpstan/phpstan-mockery --no-interaction --no-update

      - name: Install Composer dependencies
        run: composer update --prefer-${{ matrix.stability }} --no-interaction --no-progress --ansi

      - name: Run Code Format Check
        if: ${{ matrix.current }}
        run: vendor/bin/php-cs-fixer check --show-progress=none --ansi

      - name: Run Static Analysis
        if: ${{ matrix.current }}
        run: vendor/bin/phpstan analyze --no-progress --ansi

      - name: Build workbench before running tests
        run: vendor/bin/testbench workbench:build

      - name: Run Unit tests
        run: vendor/bin/phpunit --colors=always
